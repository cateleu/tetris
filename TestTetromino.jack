class TestTetromino {
    field Tetromino tetromino;
    field TetrominoFactory factory;
    field Playground playground;

    constructor TestTetromino new() {
        let factory = TetrominoFactory.new();
        let tetromino = Tetromino.new(factory);
        let playground = Playground.new();
        return this;
    }

    method void displayTetrominoFactory() {
        do factory.debugDumpAllPieces();
        do Keyboard.readChar();
        return;
    }

    method void displayZBlockTest() {
        do Screen.clearScreen();
        do playground.drawSideEdges();
        do tetromino.setPiece(2); // set to use the Z block.

        // Draw top 4 corners.
        do tetromino.draw(0, 0);
        do tetromino.draw(0, 7);
        do tetromino.draw(14,0);
        do tetromino.draw(14,7);
        return;
    }

    // Tested work!!
    method void displayOBlockTest() {
        do Screen.clearScreen();
        do playground.drawSideEdges();
        do tetromino.setPiece(1); // set to use the O block.

        // Draw top 4 corners.
        do tetromino.draw(0, 0);
        do tetromino.draw(0, 8);
        do tetromino.draw(14,0);
        do tetromino.draw(14,8);
        return;
    }

    // Tested work!
    method void displayIBlockTest() {
        do Screen.clearScreen();
        
        // horizontal I block
        do playground.drawSideEdges();
        do tetromino.setPiece(0);
        // Draw top 4 corners.
        do tetromino.draw(0, 0);
        do tetromino.draw(0, 6); // Col 6,7,8,9 = 4 length
        do tetromino.draw(15,0); 
        do tetromino.draw(15,6);
        return;
     }

     method void displayIBlockRotatedTest() {
        do Screen.clearScreen();
        
        // vertical I block
        do playground.drawSideEdges();
        do tetromino.setPiece(0); // set to use the I block.
        do tetromino.setRow(0);
        do tetromino.setCol(0);
        do tetromino.rotateLeft();
        // rotate left push the piece off 1 position to the right.
        // move left to be on the edge.
        do tetromino.moveLeft();
        return;
     }

     method void stressTestLeftRotate(int pieceNo) {
        var int maxTimes,
                index,
                row, col;

        let row = 5;
        let col = 5;
        do Screen.clearScreen();
        do playground.drawSideEdges();
        do tetromino.setPiece(pieceNo); 

        do tetromino.setRow(row);
        do tetromino.setCol(col);
        
        let maxTimes = 10;
        let index = 0;
        while (index < maxTimes) {
            do tetromino.drawPiece();
            do Sys.wait(200);
            do tetromino.rotateLeft();
            // too fast screen flick!
            let index = index + 1;
        }
        return;
    }

    method void stressTestRightRotate(int pieceNo) {
        var int maxTimes,
                index;

        do Screen.clearScreen();
        do playground.drawSideEdges();
        do tetromino.setPiece(pieceNo); 

        do tetromino.setRow(5);
        do tetromino.setCol(5);

        let maxTimes = 10;
        let index = 0;
        while (index < maxTimes) {
            do tetromino.draw(5, 5);
            do tetromino.erase(5,5);
            do tetromino.rotateRight();
            do Sys.wait(200);
            let index = index + 1;
        }
        
        return;
    }

    method void testGetPieceRightEdgeColIndex() {
        var int rightEdgeIndex;

        do Output.printString("testGetPieceRightEdgeColIndex:");
        do Output.println();
        do tetromino.setPiece(0);

        do factory.debugDumpPiece(tetromino.getCurrentPiece());
        let rightEdgeIndex = tetromino.getPieceRightEdgeColIndex();
        do Utilities.debugDisplayIntValue("I-Block getPieceRightEdgeColIndex", rightEdgeIndex);
        if (rightEdgeIndex = 3) {
            do Output.printString("Pass RightEdgeIndex I-Block");
        } else {
            do Output.printString("Fail RightEdgeIndex I-Block");
        }
        do Output.println();
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}