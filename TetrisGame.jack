class TetrisGame {
    field int direction;   // 0=none, 1=left, 2=right, 3=rotateL, 4=rotateR, 5=dropFast
    field int dropTimer;
    field int dropTick;
    field int debugFlag;   // 0=nodebug, 1=debugon

    // Playground
    field Playground playground;
    field Tetromino tetromino;
    field TetrominoFactory factory;
    
    constructor TetrisGame new() {
        let factory = TetrominoFactory.new();
        let tetromino = Tetromino.new(factory);

        let playground = Playground.new();
        let direction = 0;
        let dropTimer = 0;
        let dropTick = 10000;
        let debugFlag = 0;
        do Graphics.drawBackgroundEdges();

        return this;
    }

    method void dispose() {
        do object.dispose();
        do tetromino.dispose();
        do factory.dispose();
        do playground.dispose();

        do Memory.deAlloc(this);
        return;
    }

    method void moveObject() {
        var char key;
        var boolean hit;

        if (debugFlag > 0) {
            return;
        }

        let dropTimer = dropTimer + 1;
        if (direction = 1) { 
            do tetromino.moveLeft();
            let direction = 0;
            do Sys.wait(5);  // delays the next movement
        }
        if (direction = 2) { 
            do tetromino.moveRight();
            let direction = 0;
            do Sys.wait(5);  // delays the next movement
        }
        if (direction = 3) {
            //TODO
            let direction = 0;
            do Sys.wait(5);
        }
        if (direction = 4) {
            //TODO
            let direction = 0;
            do Sys.wait(5);
        }
        if (direction = 5) {
            do playground.dropFast(tetromino);
            let direction = 0;
            return;
        }
        
        if (dropTimer > dropTick) {
            if (~(playground.isHitDown(tetromino))) {
                do tetromino.drop();
            } else {
                do playground.setPiece(tetromino);
                do tetromino.generate();
            }
            let dropTimer = 0;
        }
        
        return;
    }

    method void debugGame() {
        do Graphics.clearDebugScreen();
        if (debugFlag = 2) {
            do playground.dumpPlaygroundData();
        }
        if (debugFlag = 3) {
            do playground.findTopFilledIndex(tetromino, 1);
        }
        
        return;
    }

    method void run() {
        var char key;
        var boolean exit;
        let exit = false;

        while (~exit) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do moveObject();
            }
            if (key = 81) { let exit = true; }

            if (key = 130) { // left arrow
                let direction = 1;
            }
            if (key = 132) { // right arrow
                let direction = 2;
            }
            if (key = 65) { // 'A' rotate left
                let direction = 3;
            }
            if (key = 90) { // 'Z' rotate right
                let direction = 4;
            }
            if (key = 32) { // 'Spacebar' drop fast 
                let direction = 5;
            }
            if (key = 68) { // 'D' - turn on debug.
                let debugFlag = 1;
                //do debugGame();
            }
            if ((debugFlag > 0) & (key = 49)) { // '1': display playground.
                let debugFlag = 2;
                do debugGame();
            }
            if ((debugFlag > 0) & (key = 50)) { // '2': display findTopFilledIndex info.
                let debugFlag = 3;
                do debugGame();
            }
            if (key = 85) { // 'U' - turn off debug and resume.
                let debugFlag = 0;
            }


            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveObject();
            }
        } // while
        return;
    }
}